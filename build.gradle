buildscript {
    repositories {
        maven {
          name "cobra"
          url "http://cobra.cs.uni-duesseldorf.de/artifactory/repo"
        }
    }

 dependencies {
    classpath(group: 'de.stups', name: 'sablecc', version: '3.2.6')
 }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
project.version = '0.0.1-SNAPSHOT'
project.group = 'infolog'

repositories {
    maven {
      name "cobra"
      url "http://cobra.cs.uni-duesseldorf.de/artifactory/repo"
    }
}
configurations {
    sablecc
}

jar {
    from sourceSets.main.allJava
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    sablecc(group: 'de.stups', name: 'sablecc', version: '3.2.7-SNAPSHOT', changing: true)
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    testCompile 'junit:junit:4.8.2'
 }



sourceSets {
    main {
        java {
            srcDirs = ['build/temp','src/main/java']
        }
    }
}



task genParser(type:JavaExec) {
    doFirst{ file('build/temp').mkdirs() }
    inputs.dir new File('src/main/resources/grammars')
    outputs.dir new File('build/temp')
//  doFirst{ file('build/temp').mkdirs() }
     main = 'org.sablecc.sablecc.SableCC'
    // classpath =  sourceSets.main.compileClasspath
     classpath = configurations.sablecc
     maxHeapSize = '1024m'
     args = ['-d','build/temp','src/main/resources/extract.scc']
}

jar {   
 include '**/*.class'
 exclude '**.*.scc' 
 from 'build/temp'
 include '**/*.dat'
 from sourceSets.main.toString()
 include '**/*.java'
}

task patches << {
  ant.patch(patchfile: 'patches/position.patch', originalfile: 'build/temp/de/hhu/stups/sablecc/patch/PositionedNode.java', failonerror:'true')
}


compileJava { 
 dependsOn = ['genParser', 'patches'] 
}

sourceSets.test.runtimeClasspath += files(sourceSets.main.java.srcDirs)
